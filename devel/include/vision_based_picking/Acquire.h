// Generated by gencpp from file vision_based_picking/Acquire.msg
// DO NOT EDIT!


#ifndef VISION_BASED_PICKING_MESSAGE_ACQUIRE_H
#define VISION_BASED_PICKING_MESSAGE_ACQUIRE_H

#include <ros/service_traits.h>


#include <vision_based_picking/AcquireRequest.h>
#include <vision_based_picking/AcquireResponse.h>


namespace vision_based_picking
{

struct Acquire
{

typedef AcquireRequest Request;
typedef AcquireResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Acquire
} // namespace vision_based_picking


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::vision_based_picking::Acquire > {
  static const char* value()
  {
    return "4cd58e4f9987399415b3ab1f2afe4e12";
  }

  static const char* value(const ::vision_based_picking::Acquire&) { return value(); }
};

template<>
struct DataType< ::vision_based_picking::Acquire > {
  static const char* value()
  {
    return "vision_based_picking/Acquire";
  }

  static const char* value(const ::vision_based_picking::Acquire&) { return value(); }
};


// service_traits::MD5Sum< ::vision_based_picking::AcquireRequest> should match 
// service_traits::MD5Sum< ::vision_based_picking::Acquire > 
template<>
struct MD5Sum< ::vision_based_picking::AcquireRequest>
{
  static const char* value()
  {
    return MD5Sum< ::vision_based_picking::Acquire >::value();
  }
  static const char* value(const ::vision_based_picking::AcquireRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::vision_based_picking::AcquireRequest> should match 
// service_traits::DataType< ::vision_based_picking::Acquire > 
template<>
struct DataType< ::vision_based_picking::AcquireRequest>
{
  static const char* value()
  {
    return DataType< ::vision_based_picking::Acquire >::value();
  }
  static const char* value(const ::vision_based_picking::AcquireRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::vision_based_picking::AcquireResponse> should match 
// service_traits::MD5Sum< ::vision_based_picking::Acquire > 
template<>
struct MD5Sum< ::vision_based_picking::AcquireResponse>
{
  static const char* value()
  {
    return MD5Sum< ::vision_based_picking::Acquire >::value();
  }
  static const char* value(const ::vision_based_picking::AcquireResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::vision_based_picking::AcquireResponse> should match 
// service_traits::DataType< ::vision_based_picking::Acquire > 
template<>
struct DataType< ::vision_based_picking::AcquireResponse>
{
  static const char* value()
  {
    return DataType< ::vision_based_picking::Acquire >::value();
  }
  static const char* value(const ::vision_based_picking::AcquireResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // VISION_BASED_PICKING_MESSAGE_ACQUIRE_H
