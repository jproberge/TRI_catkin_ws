// Generated by gencpp from file vision_based_picking/Calibrate.msg
// DO NOT EDIT!


#ifndef VISION_BASED_PICKING_MESSAGE_CALIBRATE_H
#define VISION_BASED_PICKING_MESSAGE_CALIBRATE_H

#include <ros/service_traits.h>


#include <vision_based_picking/CalibrateRequest.h>
#include <vision_based_picking/CalibrateResponse.h>


namespace vision_based_picking
{

struct Calibrate
{

typedef CalibrateRequest Request;
typedef CalibrateResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Calibrate
} // namespace vision_based_picking


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::vision_based_picking::Calibrate > {
  static const char* value()
  {
    return "d402ff8b5a8f9b73b3f2511623d98c8d";
  }

  static const char* value(const ::vision_based_picking::Calibrate&) { return value(); }
};

template<>
struct DataType< ::vision_based_picking::Calibrate > {
  static const char* value()
  {
    return "vision_based_picking/Calibrate";
  }

  static const char* value(const ::vision_based_picking::Calibrate&) { return value(); }
};


// service_traits::MD5Sum< ::vision_based_picking::CalibrateRequest> should match 
// service_traits::MD5Sum< ::vision_based_picking::Calibrate > 
template<>
struct MD5Sum< ::vision_based_picking::CalibrateRequest>
{
  static const char* value()
  {
    return MD5Sum< ::vision_based_picking::Calibrate >::value();
  }
  static const char* value(const ::vision_based_picking::CalibrateRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::vision_based_picking::CalibrateRequest> should match 
// service_traits::DataType< ::vision_based_picking::Calibrate > 
template<>
struct DataType< ::vision_based_picking::CalibrateRequest>
{
  static const char* value()
  {
    return DataType< ::vision_based_picking::Calibrate >::value();
  }
  static const char* value(const ::vision_based_picking::CalibrateRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::vision_based_picking::CalibrateResponse> should match 
// service_traits::MD5Sum< ::vision_based_picking::Calibrate > 
template<>
struct MD5Sum< ::vision_based_picking::CalibrateResponse>
{
  static const char* value()
  {
    return MD5Sum< ::vision_based_picking::Calibrate >::value();
  }
  static const char* value(const ::vision_based_picking::CalibrateResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::vision_based_picking::CalibrateResponse> should match 
// service_traits::DataType< ::vision_based_picking::Calibrate > 
template<>
struct DataType< ::vision_based_picking::CalibrateResponse>
{
  static const char* value()
  {
    return DataType< ::vision_based_picking::Calibrate >::value();
  }
  static const char* value(const ::vision_based_picking::CalibrateResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // VISION_BASED_PICKING_MESSAGE_CALIBRATE_H
