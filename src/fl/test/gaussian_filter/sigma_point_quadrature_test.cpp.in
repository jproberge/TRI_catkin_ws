/*
 * This is part of the fl library, a C++ Bayesian filtering library
 * (https://github.com/filtering-library)
 *
 * Copyright (c) 2015 Max Planck Society,
 * 				 Autonomous Motion Department,
 * 			     Institute for Intelligent Systems
 *
 * This Source Code Form is subject to the terms of the MIT License (MIT).
 * A copy of the license can be found in the LICENSE file distributed with this
 * source code.
 */

/**
 * \file sigma_point_quadrature_test.cpp.in
 * \date August 2015
 * \author Jan Issac (jan.issac@gmail.com)
 */

#include <gtest/gtest.h>

#include "sigma_point_quadrature_test.hpp"

// typedef the names of available transform for the test cases

typedef fl::UnscentedTransform UnscentedTransform;

typedef fl::MonteCarloTransform<
            fl::LinearPointCountPolicy<100>
        > MonteCarloTransform;


typedef ::testing::Types<
    fl::@Type@<
        TestConfiguration<
            @DimA@,
            @DimB@,
            @Transform@Transform
        >
    >
> TestTypes;

INSTANTIATE_TYPED_TEST_CASE_P(
    @Type@_@DimA@_@DimB@_@Transform@,
    SigmaPointQuadratureTests,
    TestTypes);
